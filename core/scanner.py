# core/scanner.py

import logging
from core.price_state import PriceState

# === –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú–´–ï –ö–û–ù–°–¢–ê–ù–¢–´ ===
THRESHOLD_PCT = 0.3              # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –ø–æ—Å–ª–µ –∫–æ–º–∏—Å—Å–∏–π (–≤ %)
TAKER_FEE_BYBIT = 0.0018         # –ö–æ–º–∏—Å—Å–∏—è –±–∏—Ä–∂–∏ Bybit (0.18%)
TAKER_FEE_OKX = 0.001            # –ö–æ–º–∏—Å—Å–∏—è –±–∏—Ä–∂–∏ OKX (0.10%)

class ArbitrageScanner:
    def __init__(self, price_state: PriceState):
        self.price_state = price_state
        self.threshold = THRESHOLD_PCT / 100

    async def check_opportunity(self):
        if not self.price_state.is_ready():
            return

        prices = self.price_state.get_all()
        b1 = prices["bybit"]
        b2 = prices["okx"]

        # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü–æ–∫—É–ø–∞–µ–º –Ω–∞ Bybit, –ø—Ä–æ–¥–∞—ë–º –Ω–∞ OKX
        await self._evaluate(
            buy_exchange="bybit",
            sell_exchange="okx",
            buy_price=b1["ask"],
            sell_price=b2["bid"],
            fee_buy=TAKER_FEE_BYBIT,
            fee_sell=TAKER_FEE_OKX
        )

        # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü–æ–∫—É–ø–∞–µ–º –Ω–∞ OKX, –ø—Ä–æ–¥–∞—ë–º –Ω–∞ Bybit
        await self._evaluate(
            buy_exchange="okx",
            sell_exchange="bybit",
            buy_price=b2["ask"],
            sell_price=b1["bid"],
            fee_buy=TAKER_FEE_OKX,
            fee_sell=TAKER_FEE_BYBIT
        )

    async def _evaluate(self, buy_exchange, sell_exchange, buy_price, sell_price, fee_buy, fee_sell):
        if buy_price <= 0 or sell_price <= 0:
            return

        gross_profit = (sell_price - buy_price) / buy_price
        net_profit = gross_profit - (fee_buy + fee_sell)

        if net_profit > self.threshold:
            logging.info(f"üí∞ –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!")
            logging.info(f"–ö—É–ø–∏—Ç—å –Ω–∞ {buy_exchange} @ {buy_price}")
            logging.info(f"–ü—Ä–æ–¥–∞—Ç—å –Ω–∞ {sell_exchange} @ {sell_price}")
            logging.info(f"–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {net_profit * 100:.4f}%")